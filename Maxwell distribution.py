

print ("Programm by Filatov & Tkachenko")

# –°–ø–∏—Å–æ–∫ –∫–æ–Ω—Å—Ç–∞–Ω—Ç
P = 3.14159
R = 8.3144
e = 2.71828

# –í–≤–µ–¥–µ–Ω–∏–µ –º–æ–ª—è—Ä–Ω–æ–π –º–∞—Å—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
import math
print ("–í–≤–µ–¥–∏—Ç–µ –º–æ–ª—è—Ä–Ω—É—é –º–∞—Å—Å—É –≤ –≥/–º–æ–ª—å")
m = input("–ú–æ–ª—è—Ä–Ω–∞—è –º–∞—Å—Å–∞ = ")
mm = "–≥/–º–æ–ª—å"
M = (int(m) / int(1000))
print(f"{M} –∫–≥/–º–æ–ª—å")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è –º–æ–ª—è—Ä–Ω–æ–π –º–∞—Å—Å—ã –∏ –≤–≤–æ–¥ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
if int(m) > int(0):
 print ("–í–≤–µ–¥–∏—Ç–µ –∞–±—Å–æ–ª—é—Ç–Ω—É—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –≤ –∫–µ–ª—å–≤–∏–Ω–∞—Ö")
 t = input("–ê–±—Å–æ–ª—é—Ç–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ = ")
 T = float(t)
 print (T)

# –ó–∞—Ä–∞–Ω–µ–µ –∑–∞–¥–∞–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–æ—Ä–º—É–ª—ã –¥–ª—è –æ–±–ª–µ–≥—á–µ–Ω–∏—è –∫–æ–¥–∞
o = 4.0 * P
h = (M / (2.0 * P * R * T)) ** 1.5
u = (2.0 * R * T) / M
n = 1.0 / e

z = o * h * u * n

# –ê–Ω–∞–ª–∏–∑ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –≤—ã–≤–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω
print("1. –û–±–ª–∞—Å—Ç—å –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è f(V) –º–Ω–æ–∂–∏–Ω–∞ –¥—ñ–π—Å–Ω–∏—Ö —á–∏—Å–µ–ª D(f(V)) = R" )
print(f"2. –û–±–ª–∞—Å—Ç—å –∑–Ω–∞—á–µ–Ω—å —Ñ-—ñ—ó E(f(V)) = [0; {z}]")
print("3. –§—É–Ω–∫—Ü—ñ—è –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥—É")
j = math.sqrt(u)
print(f"4. f(V)ü†ï, V —î [0; {j}])")
print("5. –ù–µ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–∞")
print(f"6. –ù–∞–π–±—ñ–ª—å—à–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è –Ω–∞–±—É–≤–∞—î –ø—Ä–∏ V = {j}")
print(f"7. –ü–ª–æ—â–∞ –ø—ñ–¥ –≥—Ä–∞—Ñ—ñ–∫–æ–º —Ñ—É–Ω–∫—Ü—ñ—ó –¥–æ—Ä—ñ–≤–Ω—é—î 1")

# –ó–∞–ø—É—Å–∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ matplotlib
import matplotlib.pyplot as plt
from matplotlib.ticker import (MultipleLocator, FormatStrFormatter,
                               AutoMinorLocator)
from matplotlib import pylab
import matplotlib.ticker as ticker                               
import numpy as np

# –§–æ—Ä–º—É–ª–∞ —É –∏ –∑–∞–¥–∞–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ö
x = np.linspace(0, 35, 30)
y = 4 * P * ((M / 2.0 * P * R * T) ** 1.5) * (x ** 2.0) * (e ** (-M * (x ** 2.0)) / 2.0 * R * T)
fig, ax = plt.subplots(figsize=(12, 10))


# –õ–∏–Ω–∏–∏ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ç–∫–∏:
ax.grid(which='major',linewidth=1.0,
        color = 'k')

# –í–∏–¥–∏–º–æ—Å—Ç—å –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö –¥–µ–ª–µ–Ω–∏–π:
ax.minorticks_on()

# –ü–æ–¥–ø–∏—Å–∏ –∞–±—Ü–∏—Å—ã, –æ—Ä–¥–∏–Ω–∞—Ç—ã –∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –≥—Ä–∞—Ñ–∏–∫–∞
ax.set_title("–ì—Ä–∞—Ñ–∏–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–æ–ª–µ–∫—É–ª –ø–æ —Å–∫–æ—Ä–æ—Å—Ç—è–º", fontsize=16)
ax.set_xlabel("V", fontsize=16)        
ax.set_ylabel("f(V)", fontsize=16)

# –õ–∏–Ω–∏–∏ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–æ–π —Å–µ—Ç–∫–∏
ax.grid(which="minor", linestyle="--", color="gray", linewidth=0.5)

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Å–Ω–æ–≤–Ω–æ–π –ª–∏–Ω–∏–∏
ax.plot(x, y, label="f(V)", color = 'r', linewidth = 3)

# –í–∫–ª—é—á–µ–Ω–∏–µ "–ª–µ–≥–µ–Ω–¥—ã"
ax.legend()

frame = pylab.gca()
frame.axes.get_xaxis().set_ticklabels([])
frame.axes.get_yaxis().set_ticklabels([])

ax.xaxis.set_minor_locator(AutoMinorLocator())
ax.yaxis.set_minor_locator(AutoMinorLocator())

plt.show()
